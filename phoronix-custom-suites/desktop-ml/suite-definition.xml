<?xml version="1.0"?>
<!--Phoronix Test Suite v10.8.4-->
<PhoronixTestSuite>
  <SuiteInformation>
    <Title>desktop-ml</Title>
    <Version>1.0.0</Version>
    <TestType>System</TestType>
    <Description>Desktop ML</Description>
    <Maintainer>Vladimir Petko</Maintainer>
  </SuiteInformation>
  <Execute>
    <Test>pts/numpy-1.2.1</Test>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 1 resnet50</Arguments>
    <Description>Device: CPU - Batch Size: 1 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 1 resnet152</Arguments>
    <Description>Device: CPU - Batch Size: 1 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 16 resnet50</Arguments>
    <Description>Device: CPU - Batch Size: 16 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 32 resnet50</Arguments>
    <Description>Device: CPU - Batch Size: 32 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 64 resnet50</Arguments>
    <Description>Device: CPU - Batch Size: 64 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 16 resnet152</Arguments>
    <Description>Device: CPU - Batch Size: 16 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 256 resnet50</Arguments>
    <Description>Device: CPU - Batch Size: 256 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 32 resnet152</Arguments>
    <Description>Device: CPU - Batch Size: 32 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 512 resnet50</Arguments>
    <Description>Device: CPU - Batch Size: 512 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 64 resnet152</Arguments>
    <Description>Device: CPU - Batch Size: 64 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 256 resnet152</Arguments>
    <Description>Device: CPU - Batch Size: 256 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 512 resnet152</Arguments>
    <Description>Device: CPU - Batch Size: 512 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 1 efficientnet_v2_l</Arguments>
    <Description>Device: CPU - Batch Size: 1 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 16 efficientnet_v2_l</Arguments>
    <Description>Device: CPU - Batch Size: 16 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 32 efficientnet_v2_l</Arguments>
    <Description>Device: CPU - Batch Size: 32 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 64 efficientnet_v2_l</Arguments>
    <Description>Device: CPU - Batch Size: 64 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 256 efficientnet_v2_l</Arguments>
    <Description>Device: CPU - Batch Size: 256 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cpu 512 efficientnet_v2_l</Arguments>
    <Description>Device: CPU - Batch Size: 512 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 1 resnet50</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 1 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 1 resnet152</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 1 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 16 resnet50</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 16 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 32 resnet50</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 32 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 64 resnet50</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 64 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 16 resnet152</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 16 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 256 resnet50</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 256 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 32 resnet152</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 32 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 512 resnet50</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 512 - Model: ResNet-50</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 64 resnet152</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 64 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 256 resnet152</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 256 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 512 resnet152</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 512 - Model: ResNet-152</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 1 efficientnet_v2_l</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 1 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 16 efficientnet_v2_l</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 16 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 32 efficientnet_v2_l</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 32 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 64 efficientnet_v2_l</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 64 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 256 efficientnet_v2_l</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 256 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pytorch-1.1.0</Test>
    <Arguments>cuda 512 efficientnet_v2_l</Arguments>
    <Description>Device: NVIDIA CUDA GPU - Batch Size: 512 - Model: Efficientnet_v2_l</Description>
  </Execute>
  <Execute>
    <Test>pts/pybench-1.1.3</Test>
    <Description>Total For Average Test Times</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>go</Arguments>
    <Description>Benchmark: go</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>2to3</Arguments>
    <Description>Benchmark: 2to3</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>chaos</Arguments>
    <Description>Benchmark: chaos</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>float</Arguments>
    <Description>Benchmark: float</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>nbody</Arguments>
    <Description>Benchmark: nbody</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>pathlib</Arguments>
    <Description>Benchmark: pathlib</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>raytrace</Arguments>
    <Description>Benchmark: raytrace</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>json_loads</Arguments>
    <Description>Benchmark: json_loads</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>crypto_pyaes</Arguments>
    <Description>Benchmark: crypto_pyaes</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>regex_compile</Arguments>
    <Description>Benchmark: regex_compile</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>python_startup</Arguments>
    <Description>Benchmark: python_startup</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>django_template</Arguments>
    <Description>Benchmark: django_template</Description>
  </Execute>
  <Execute>
    <Test>pts/pyperformance-1.0.2</Test>
    <Arguments>pickle_pure_python</Arguments>
    <Description>Benchmark: pickle_pure_python</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numpy -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numpy -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>glm.py</Arguments>
    <Description>Benchmark: GLM</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>saga.py</Arguments>
    <Description>Benchmark: SAGA</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>tree.py</Arguments>
    <Description>Benchmark: Tree</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>lasso.py</Arguments>
    <Description>Benchmark: Lasso</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>sparsify.py</Arguments>
    <Description>Benchmark: Sparsify</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_ward.py</Arguments>
    <Description>Benchmark: Plot Ward</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>mnist.py</Arguments>
    <Description>Benchmark: MNIST Dataset</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_neighbors.py</Arguments>
    <Description>Benchmark: Plot Neighbors</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>sgd_regression.py</Arguments>
    <Description>Benchmark: SGD Regression</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>online_ocsvm.py</Arguments>
    <Description>Benchmark: SGDOneClassSVM</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>isolation_forest.py</Arguments>
    <Description>Benchmark: Isolation Forest</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>text_vectorizers.py</Arguments>
    <Description>Benchmark: Text Vectorizers</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_hierarchical.py</Arguments>
    <Description>Benchmark: Plot Hierarchical</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_omp_lars.py</Arguments>
    <Description>Benchmark: Plot OMP vs. LARS</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>feature_expansions.py</Arguments>
    <Description>Benchmark: Feature Expansions</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>lof.py</Arguments>
    <Description>Benchmark: LocalOutlierFactor</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>tsne_mnist.py</Arguments>
    <Description>Benchmark: TSNE MNIST Dataset</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>isotonic.py --iterations 100 --log_min_problem_size 1 --log_max_problem_size 10 --dataset logistic</Arguments>
    <Description>Benchmark: Isotonic / Logistic</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_incremental_pca.py</Arguments>
    <Description>Benchmark: Plot Incremental PCA</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>hist_gradient_boosting.py</Arguments>
    <Description>Benchmark: Hist Gradient Boosting</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>sample_without_replacement.py</Arguments>
    <Description>Benchmark: Sample Without Replacement</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>covertype.py</Arguments>
    <Description>Benchmark: Covertype Dataset Benchmark</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>hist_gradient_boosting_adult.py</Arguments>
    <Description>Benchmark: Hist Gradient Boosting Adult</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>isotonic.py --iterations 100 --log_min_problem_size 1 --log_max_problem_size 10 --dataset perturbed_logarithm</Arguments>
    <Description>Benchmark: Isotonic / Perturbed Logarithm</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>hist_gradient_boosting_threading.py</Arguments>
    <Description>Benchmark: Hist Gradient Boosting Threading</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>20newsgroups.py -e logistic_regression</Arguments>
    <Description>Benchmark: 20 Newsgroups / Logistic Regression</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_polynomial_kernel_approximation.py</Arguments>
    <Description>Benchmark: Plot Polynomial Kernel Approximation</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>hist_gradient_boosting_categorical_only.py</Arguments>
    <Description>Benchmark: Hist Gradient Boosting Categorical Only</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>kernel_pca_solvers_time_vs_n_samples.py</Arguments>
    <Description>Benchmark: Kernel PCA Solvers / Time vs. N Samples</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>kernel_pca_solvers_time_vs_n_components.py</Arguments>
    <Description>Benchmark: Kernel PCA Solvers / Time vs. N Components</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>random_projections.py --n-times 100</Arguments>
    <Description>Benchmark: Sparse Random Projections / 100 Iterations</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b jax -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: JAX - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b jax -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: JAX - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b numba -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Numba - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b numba -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Numba - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b aesara -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b aesara -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b pytorch -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b pytorch -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 16384 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 16384 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 65536 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 65536 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 262144 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 262144 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device cpu -b tensorflow -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: CPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 1048576 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 1048576 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 4194304 benchmarks/equation_of_state/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Equation of State</Description>
  </Execute>
  <Execute>
    <Test>pts/pyhpc-3.0.0</Test>
    <Arguments>--device gpu -b tensorflow -s 4194304 benchmarks/isoneutral_mixing/</Arguments>
    <Description>Device: GPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Isoneutral Mixing</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>glmnet.py</Arguments>
    <Description>Benchmark: Glmnet</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_lasso_path.py</Arguments>
    <Description>Benchmark: Plot Lasso Path</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_fastkmeans.py</Arguments>
    <Description>Benchmark: Plot Fast KMeans</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_parallel_pairwise.py</Arguments>
    <Description>Benchmark: Plot Parallel Pairwise</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>isotonic.py --iterations 100 --log_min_problem_size 1 --log_max_problem_size 10 --dataset pathological</Arguments>
    <Description>Benchmark: Isotonic / Pathological</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>rcv1_logreg_convergence.py</Arguments>
    <Description>Benchmark: RCV1 Logreg Convergencet</Description>
  </Execute>
  <Execute>
    <Test>pts/scikit-learn-2.0.0</Test>
    <Arguments>plot_svd.py</Arguments>
    <Description>Benchmark: Plot Singular Value Decomposition</Description>
  </Execute>
</PhoronixTestSuite>
